@model AlphaMetrixForms.Web.Models.Form.FormViewModel

@{
    ViewData["Title"] = "ModifyFormView";
}
@{
    string action;
    if (Model.EditMode)
    {
        action = "Edit";
    }
    else
    {
        action = "Create";
    }
}
<div class="card">

    <div class="card-header">
        Form
    </div>
    <div class="card-body">
        <div class="col-md-6">
            <form asp-action="@action" id="form">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" placeholder="Type form description here..." />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" placeholder="Type form description here..." />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div id="detailsContainer">
                    @Html.EditorFor(model => model.Questions)
                </div>
                <div name="main" class="visible">
                    <button name="main" type="button" class="btn btn-primary">Add Question</button>
                </div>
                <div name="inside" class="invisible">
                    <button name="add" type="button" class="btn btn-primary">+</button>
                    <button name="textQuestion" type="button" class="btn btn-primary">Text</button>
                    <button name="optionsQuestion" type="button" class="btn btn-primary">Options</button>
                    <button name="documentQuestion" type="button" class="btn btn-primary">Document</button>
                </div>
                <div name="sumbit" class="visible">
                    @if (Model.EditMode)
                    {
                        <br>
                        <input type="submit" name="saveChanges" class="btn btn-primary" value="Save">
                        <input type="button" name="preview" class="btn btn-primary" value="Preview">
                        <button type="button" id="@Model.Id" name="main-email-send" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
                            Share
                        </button>
                        <input type="button" name="deleteForm" class="btn btn-danger" id="@Model.Id" value="Delete">
                    }
                    else
                    {
                        <input type="submit" name="createForm" class="btn btn-primary" value="Create">
                        <input type="button" name="preview" class="btn btn-primary" value="Preview">
                    }
                </div>
                <div id="alerts">
                </div>
                @Html.Hidden("Current", Model.Current)
                @Html.Hidden("Id", Model.Id)
                @Html.Hidden("EditMode", Model.EditMode)
            </form>
            <div id="@Model.Questions.Count" name="idHolder" hidden>
            </div>
        </div>
    </div>
</div>
<br>
<br>

<partial name="_MultipleEmailPartialView" />


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        let counter = -1;
        let questionsNum = $("div[name='main']").attr('id')
        if (questionsNum > 0) {
            counter = questionsNum - 1;
        }

        $("button[name='main-email-send']").on('click', function () {
            $(this).attr("name", "unique");
        });
        $("div[name='main']").on("click", function () {
            var $buttons = $("div[name='inside']");
            var $buttonToHide = $("div[name='main']");
            if ($buttons.hasClass("invisible")) {
                $buttons.removeClass("invisible");
                $buttons.addClass("visible");
                $buttonToHide.hide();
            }
        });
        $("button[name='add']").on("click", function () {
            var $buttonsToHide = $("div[name='inside']");
            var $buttonToShow = $("div[name='main']");
            $buttonsToHide.removeClass("visible");
            $buttonsToHide.addClass("invisible");
            $buttonToShow.show();
        });
        $("button[name='textQuestion']").on('click', function () {
            $.ajax({
                async: true,
                data: $('#form').serialize(),
                type: "POST",
                url: '/TextQuestion/CreateTextQuestion',
                success: function (partialView) {
                    $('#detailsContainer').html(partialView);
                }
            });
        });
        $("button[name='optionsQuestion']").on('click', function () {
            $.ajax({
                async: true,
                data: $('#form').serialize(),
                type: "POST",
                url: '/OptionQuestion/CreateOptionQuestion',
                success: function (partialView) {
                    $('#detailsContainer').html(partialView);
                }
            });
        });
        $("button[name='documentQuestion']").on('click', function () {
            //counter++;
            //document.getElementById('Current').value = counter;
            $.ajax({
                async: true,
                data: $('#form').serialize(),
                type: "POST",
                url: '/DocumentQuestion/CreateDocumentQuestion',
                success: function (partialView) {
                    $('#detailsContainer').html(partialView);
                }
            });
        });
        $('form').submit(function (e) {
            e.preventDefault();
            let edit = document.getElementById('EditMode').value;
            console.log(edit);
            if (edit) {
                $.ajax({
                    async: true,
                    data: $('#form').serialize(),
                    type: "POST",
                    url: '/Form/SaveChanges',
                    success: function () {
                        swal({
                            title: "Success!",
                            text: "Changes were saved successfully!",
                            icon: "success",
                            button: "Ok!",
                        });
                    },
                    error: function (xhr) {
                        swal(xhr.responseJSON.responseText);
                    }
                });
            }
        });

        $("input[name='createForm']").on('click', function () {
            $.ajax({
                async: true,
                data: $('#form').serialize(),
                type: "POST",
                url: '/Form/Create',
                success: function () {
                    swal("Amazing! You just created a form!", {
                        icon: "success",
                    })
                        .then(() => {
                            window.location.replace("https://localhost:44366/User/MyForms")
                        });
                },
                error: function (xhr) {
                    swal(xhr.responseJSON.responseText);
                }
            });
        });
        $("input[name='deleteForm']").on('click', function () {
            swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this form!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {

                    if (willDelete) {
                        $.ajax({
                            async: true,
                            data: { "id": this.id },
                            type: "POST",
                            url: '/Form/Delete',
                            success: function () {
                                swal("Poof! Your form has been deleted!", {
                                    icon: "success",
                                })
                                    .then(() => {
                                        window.location.replace("https://localhost:44366/User/MyForms")
                                    });
                            }
                        });

                    } else {
                        swal("Your form is safe!");
                    }
                });
        });
    </script>
}


